---
tags:
  pipeline: season11_scanner3DTop
  description: testing_setup
  notes: Processing of Season 11 scanner3DTop data
  runby: Nathan and Travis
  sensor: scanner3DTop 
  season: 11
  season_dir_name: season_11_sorghum_yr_2020

modules:
  1: 
    container: 
      simg_name: 3d_preprocessing.simg
      dockerhub_path: docker://phytooracle/3d_preprocessing:latest
    command: singularity run 3d_preprocessing.simg -l gcp_season_11.txt -o alignment -i ${INPUT_DIR}
    distribution_level: wq
    file_level: 
    input_dir: [scanner3DTop]
    input_file: -west_0.ply
    inputs: [$FILE_metadata.json,
             $FILE__Top-heading-east_0_g.png,
             $FILE__Top-heading-east_0.ply,
             $FILE__Top-heading-east_0_p.png,
             $FILE__Top-heading-west_0_g.png,
             $FILE__Top-heading-west_0.ply,
             $FILE__Top-heading-west_0_p.png,
             $FILE__Top-heading-west_0.ply,
             stereoTop_full_season_clustering.csv,
             gcp_season_11.txt]

    outputs: [alignment/east/$SUBDIR__Top-heading-east.ply,
              alignment/east_downsampled/$SUBDIR__Top-heading-east.ply, 
              alignment/merged/$SUBDIR__Top-heading-merged.ply,
              alignment/merged_downsampled/$SUBDIR__Top-heading-merged.ply,
              alignment/west/$SUBDIR__Top-heading-west.ply,
              alignment/west_downsampled/$SUBDIR__Top-heading-west.ply,
              alignment/metadata/$SUBDIR_updated-metadata.json]

#  2: 
#    container: 
#      simg_name: 3d_postprocessing.simg
#      dockerhub_path: docker://phytooracle/3d_postprocessing:latest
#    command: singularity run 3d_postprocessing.simg -i alignment/ -o postprocessing_out -f ${SUBDIR} -t transfromation.json -p stereoTop_full_season_clustering.csv -s 10 -d ${DATE} -l gcp_season_10.txt
#    distribution_level: wq
#    file_level: 
#    input_dir: [alignment, west]
#    input_file: -west.ply
#    inputs: [alignment/east/$SUBDIR-east.ply,
#             alignment/east_downsampled/$SUBDIR-east.ply, 
#             alignment/merged/$SUBDIR-merged.ply,
#             alignment/merged_downsampled/$SUBDIR-merged.ply,
#             alignment/west/$SUBDIR-west.ply,
#             alignment/west_downsampled/$SUBDIR-west.ply,
#             transfromation.json,
#             stereoTop_full_season_clustering.csv,
#             gcp_season_10.txt]
#    outputs: [postprocessing_out/east/$SUBDIR-east.ply,
#              postprocessing_out/east_downsampled/$SUBDIR-east.ply, 
#              postprocessing_out/merged/$SUBDIR-merged.ply,
#              postprocessing_out/merged_downsampled/$SUBDIR-merged.ply,
#              postprocessing_out/west/$SUBDIR-west.ply,
#              postprocessing_out/west_downsampled/$SUBDIR-west.ply]
#  
#  3: 
#    container: 
#      simg_name: 3d_crop_individual_plants.simg
#      dockerhub_path: docker://phytooracle/3d_crop_individual_plants:latest
#    command: singularity run -B $(pwd):/mnt --pwd /mnt 3d_crop_individual_plants.simg -i postprocessing_out/ -p stereoTop_full_season_clustering.csv -f ${SUBDIR} -o individual_plants_out -s 10 -d ${DATE} && tar -cvf ${SUBDIR}_individual_plants.tar individual_plants_out/
#    distribution_level: wq
#    file_level: 
#    input_dir: [postprocessing_out, west]
#    input_file: -west.ply
#    inputs: [transfromation.json,
#             stereoTop_full_season_clustering.csv,
#             gcp_season_10.txt,
#             postprocessing_out/east/$SUBDIR-east.ply,
#             postprocessing_out/east_downsampled/$SUBDIR-east.ply, 
#             postprocessing_out/merged/$SUBDIR-merged.ply,
#             postprocessing_out/merged_downsampled/$SUBDIR-merged.ply,
#             postprocessing_out/west/$SUBDIR-west.ply,
#             postprocessing_out/west_downsampled/$SUBDIR-west.ply]
#    outputs: [$BASENAME_individual_plants.tar]
#
#  4: 
#    container: 
#      simg_name: slack_notifications.simg
#      dockerhub_path: docker://phytooracle/slack_notifications:latest
#    command: tar -xvf ${SUBDIR}_individual_plants.tar && rm ${SUBDIR}_individual_plants.tar 
#    distribution_level: local
#    file_level: 
#    input_dir: [postprocessing_out, west]
#    input_file: -west.ply
#    inputs: [$BASENAME_individual_plants.tar]
#    outputs: []
#
#  5: 
#    container: 
#      simg_name: 3d_individual_plant_registration.simg
#      dockerhub_path: docker://phytooracle/3d_individual_plant_registration:multiway_registration
#    command: singularity run -B $(pwd):/mnt --pwd /mnt 3d_individual_plant_registration.simg -i individual_plants_out/ -p ${PLANT_NAME} -r individual_plants_out/plant_reports/${PLANT_NAME} -o individual_plants_out/segmentation_pointclouds/${PLANT_NAME}
#    distribution_level: wq
#    file_level: subdir
#    input_dir: [individual_plants_out, west]
#    input_file: _cropped.ply
#    inputs: [individual_plants_out/west/$PLANT_NAME,
#             individual_plants_out/west_downsampled/$PLANT_NAME,
#             individual_plants_out/east/$PLANT_NAME,
#             individual_plants_out/east_downsampled/$PLANT_NAME]
#    outputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/combined_multiway_registered.ply]
#
#  6:
#    container:
#      simg_name: heatmap_ml_based_cropping.simg
#      dockerhub_path: docker://phytooracle/heatmap_ml_based_cropping:latest
#    command: singularity run -B $(pwd):/mnt --pwd /mnt heatmap_ml_based_cropping.simg -p ${PLANT_PATH} -m ${DET_MODEL_PATH} -c 0.5 -po individual_plants_out/segmentation_pointclouds -fo individual_plants_out/plant_reports
#    distribution_level: wq
#    file_level: 
#    input_dir: [individual_plants_out, segmentation_pointclouds]
#    input_file: _registered.ply
#    inputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/combined_multiway_registered.ply]
#    outputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/ml_crop.ply,
#              individual_plants_out/plant_reports/$PLANT_NAME/heatmap.jpg,
#              individual_plants_out/plant_reports/$PLANT_NAME/identificaiton.jpg]
#
#  7:
#    container: 
#      simg_name: dgcnn_single_plant_soil_segmentation_pipeline.simg
#      dockerhub_path: docker://phytooracle/dgcnn_single_plant_soil_segmentation_pipeline:latest
#    command: singularity run -B $(pwd):/mnt --pwd /mnt dgcnn_single_plant_soil_segmentation_pipeline.simg -p ${PLANT_PATH} --model_path ${SEG_MODEL_PATH} -po individual_plants_out/segmentation_pointclouds -fo individual_plants_out/plant_reports -ef ml_crop
#    distribution_level: wq
#    file_level: 
#    input_dir: [individual_plants_out, segmentation_pointclouds]
#    input_file: ml_crop.ply
#    inputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/ml_crop.ply]
#    outputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/segmentation_plant.ply, 
#              individual_plants_out/segmentation_pointclouds/$PLANT_NAME/segmentation_soil.ply,
#              individual_plants_out/segmentation_pointclouds/$PLANT_NAME/soil_segmentation.npy,
#              individual_plants_out/plant_reports/$PLANT_NAME/soil_segmentation.csv,
#              individual_plants_out/plant_reports/$PLANT_NAME/soil_segmentation.gif]
#
#  8:
#    container: 
#      simg_name: 3d_neighbor_removal.simg
#      dockerhub_path: docker://phytooracle/3d_neighbor_removal:latest
#    command: singularity run -B $(pwd):/mnt --pwd /mnt 3d_neighbor_removal.simg -plant ${PLANT_NAME} -e 0.07 -pod individual_plants_out/segmentation_pointclouds -fod individual_plants_out/plant_reports
#    distribution_level: wq
#    file_level: 
#    input_dir: [individual_plants_out, segmentation_pointclouds]
#    input_file: segmentation_plant.ply
#    inputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/segmentation_plant.ply]
#    outputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/final.ply]             
#  
#  9:
#    container: 
#      simg_name: 3d_segmentation_dashboard_assets.simg
#      dockerhub_path: docker://phytooracle/3d_segmentation_dashboard_assets:latest
#    command: singularity run -B $(pwd):/mnt --pwd /mnt 3d_segmentation_dashboard_assets.simg -i ${PLANT_PATH} -plant ${PLANT_NAME} -pod individual_plants_out/segmentation_pointclouds -fod individual_plants_out/plant_reports
#    distribution_level: wq
#    file_level: 
#    input_dir: [individual_plants_out, segmentation_pointclouds]
#    input_file: final.ply
#    inputs: [individual_plants_out/segmentation_pointclouds/$PLANT_NAME/combined_multiway_registered.ply,
#             individual_plants_out/segmentation_pointclouds/$PLANT_NAME/ml_crop.ply,
#             individual_plants_out/segmentation_pointclouds/$PLANT_NAME/segmentation_plant.ply,
#             individual_plants_out/segmentation_pointclouds/$PLANT_NAME/segmentation_soil.ply,
#             individual_plants_out/segmentation_pointclouds/$PLANT_NAME/soil_segmentation.npy,
#             individual_plants_out/segmentation_pointclouds/$PLANT_NAME/final.ply,
#             individual_plants_out/plant_reports/$PLANT_NAME/heatmap.jpg,
#             individual_plants_out/plant_reports/$PLANT_NAME/identificaiton.jpg,
#             individual_plants_out/plant_reports/$PLANT_NAME/soil_segmentation.csv,
#             individual_plants_out/plant_reports/$PLANT_NAME/soil_segmentation.gif]
##              individual_plants_out/plant_reports/$PLANT_NAME/final.gif]
#    outputs: [individual_plants_out/plant_reports/$PLANT_NAME/75_ML_compare.gif,
#              individual_plants_out/plant_reports/$PLANT_NAME/segmentation_dbscan_compare.gif]

workload_manager:
  account: lyons-lab
  partition: standard
  job_name: po_season11_3d
  nodes: 1 
  number_worker_array: 6 #94
  cores_per_worker: 6
  time_minutes: 1440
  retries: 1
  port: 6022
  #mem_per_core: 32
  mem_per_core: 6
  manager_name: po_s11_3D
  worker_timeout_seconds: 900   # 86400

paths:
  models:
    detection: /iplant/home/shared/phytooracle/season_10_lettuce_yr_2020/level_0/necessary_files/detecto_heatmap_lettuce_detection_weights.pth
    segmentation: /iplant/home/shared/phytooracle/season_10_lettuce_yr_2020/level_0/necessary_files/dgcnn_3d_model.pth
  pipeline_outpath: [individual_plants_out]
  outpath_subdirs: [east, east_downsampled, plant_reports, segmentation_pointclouds, west, west_downsampled]

  cyverse: 
    input: 
      basename: /iplant/home/shared/phytooracle/season_11_sorghum_yr_2020/level_0/scanner3DTop/
      subdir: 
      prefix: scanner?DTop-
      suffix: __*.tar?gz
    output: 
      basename: /iplant/home/shared/phytooracle/season_11_sorghum_yr_2020/level_2/scanner3DTop/
      subdir: individual_plants_out
